<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_circle_shape_8h" kind="file" language="C++">
    <compoundname>CircleShape.h</compoundname>
    <includes local="no">SFML/Graphics/Export.h</includes>
    <includes local="no">SFML/Graphics/Color.h</includes>
    <includes local="no">SFML/Graphics/Rect.h</includes>
    <includes local="no">SFML/Graphics/Transform.h</includes>
    <includes local="no">SFML/Graphics/Types.h</includes>
    <includes local="no">SFML/System/Vector2.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="0">
        <label>Includes/personnal/CircleShape.h</label>
        <link refid="_circle_shape_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>SFML/Graphics/Export.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>SFML/Graphics/Transform.h</label>
      </node>
      <node id="2">
        <label>SFML/Graphics/Color.h</label>
      </node>
      <node id="3">
        <label>SFML/Graphics/Rect.h</label>
      </node>
      <node id="6">
        <label>SFML/System/Vector2.h</label>
      </node>
      <node id="5">
        <label>SFML/Graphics/Types.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_circle_shape_8h_1a51267f1e1ec64176b157b468324ab95c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfCircleShape *</type>
        <definition>CSFML_GRAPHICS_API sfCircleShape* sfCircleShape_create</definition>
        <argsstring>(void)</argsstring>
        <name>sfCircleShape_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new sfCircleShape object, or NULL if it failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a7d11d8024690c309eaadc5f4a45a7420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfCircleShape *</type>
        <definition>CSFML_GRAPHICS_API sfCircleShape* sfCircleShape_copy</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_copy</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Copy an existing circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape to copy</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Copied object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a43e726977b19c72e1df43ec708c19c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_destroy</definition>
        <argsstring>(sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_destroy</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Destroy an existing circle Shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a5d8af607479e309d12eafbfdc7ff277d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setPosition</definition>
        <argsstring>(sfCircleShape *shape, sfVector2f position)</argsstring>
        <name>sfCircleShape_setPosition</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>sfVector2f</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Set the position of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>This function completely overwrites the previous position. See sfCircleShape_move to apply an offset based on the previous position instead. The default position of a circle Shape object is (0, 0).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>New position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a3ce95e01ede46f44d92528e248cd54e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setRotation</definition>
        <argsstring>(sfCircleShape *shape, float angle)</argsstring>
        <name>sfCircleShape_setRotation</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Set the orientation of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>This function completely overwrites the previous rotation. See sfCircleShape_rotate to add an angle based on the previous rotation instead. The default rotation of a circle Shape object is 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>New rotation, in degrees </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1ad146906ae90b6c5ceea0074c5e42e263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setScale</definition>
        <argsstring>(sfCircleShape *shape, sfVector2f scale)</argsstring>
        <name>sfCircleShape_setScale</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>sfVector2f</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Set the scale factors of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>This function completely overwrites the previous scale. See sfCircleShape_scale to add a factor based on the previous scale instead. The default scale of a circle Shape object is (1, 1).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>New scale factors </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a260cf47d6d648fb641162120679baade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setOrigin</definition>
        <argsstring>(sfCircleShape *shape, sfVector2f origin)</argsstring>
        <name>sfCircleShape_setOrigin</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>sfVector2f</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
<para>Set the local origin of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>The origin of an object defines the center point for all transformations (position, scale, rotation). The coordinates of this point must be relative to the top-left corner of the object, and ignore all transformations (position, scale, rotation). The default origin of a circle Shape object is (0, 0).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>origin</parametername>
</parameternamelist>
<parameterdescription>
<para>New origin </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1aa221dab0b7c716e94a2e0c31e2beb0e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfVector2f</type>
        <definition>CSFML_GRAPHICS_API sfVector2f sfCircleShape_getPosition</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getPosition</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the position of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current position </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a269bd024b8349311c02a8217f63ee95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API float</type>
        <definition>CSFML_GRAPHICS_API float sfCircleShape_getRotation</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getRotation</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the orientation of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>The rotation is always in the range [0, 360].</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current rotation, in degrees </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a4b788aaa837bbf2e6d56962d0bf08f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfVector2f</type>
        <definition>CSFML_GRAPHICS_API sfVector2f sfCircleShape_getScale</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getScale</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the current scale of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current scale factors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1aa8dd9b2edcb18aad01daaff39f508d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfVector2f</type>
        <definition>CSFML_GRAPHICS_API sfVector2f sfCircleShape_getOrigin</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getOrigin</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the local origin of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current origin </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a32779880700087a510005912a83e6125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_move</definition>
        <argsstring>(sfCircleShape *shape, sfVector2f offset)</argsstring>
        <name>sfCircleShape_move</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>sfVector2f</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Move a circle shape by a given offset. </para>        </briefdescription>
        <detaileddescription>
<para>This function adds to the current position of the object, unlike sfCircleShape_setPosition which overwrites it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a7c4c3e728836a8b1695d55a1170b1015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_rotate</definition>
        <argsstring>(sfCircleShape *shape, float angle)</argsstring>
        <name>sfCircleShape_rotate</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Rotate a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>This function adds to the current rotation of the object, unlike sfCircleShape_setRotation which overwrites it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Angle of rotation, in degrees </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a2fdd1ab51168ceba8eea29fa51ac4058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_scale</definition>
        <argsstring>(sfCircleShape *shape, sfVector2f factors)</argsstring>
        <name>sfCircleShape_scale</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>sfVector2f</type>
          <declname>factors</declname>
        </param>
        <briefdescription>
<para>Scale a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>This function multiplies the current scale of the object, unlike sfCircleShape_setScale which overwrites it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>factors</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale factors </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1ac7007a78ff597e1cdd3595c5fabd3a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfTransform</type>
        <definition>CSFML_GRAPHICS_API sfTransform sfCircleShape_getTransform</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getTransform</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the combined transform of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Transform combining the position/rotation/scale/origin of the object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a03dec76adece17e9b42f2d189d034279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfTransform</type>
        <definition>CSFML_GRAPHICS_API sfTransform sfCircleShape_getInverseTransform</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getInverseTransform</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the inverse of the combined transform of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Inverse of the combined transformations applied to the object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1ae2b9e18aed93d872a1b8ef6efd6c6805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setTexture</definition>
        <argsstring>(sfCircleShape *shape, const sfTexture *texture, sfBool resetRect)</argsstring>
        <name>sfCircleShape_setTexture</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>const sfTexture *</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>sfBool</type>
          <declname>resetRect</declname>
        </param>
        <briefdescription>
<para>Change the source texture of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>texture</emphasis> argument refers to a texture that must exist as long as the shape uses it. Indeed, the shape doesn&apos;t store its own copy of the texture, but rather keeps a pointer to the one that you passed to this function. If the source texture is destroyed and the shape tries to use it, the behaviour is undefined. <emphasis>texture</emphasis> can be NULL to disable texturing. If <emphasis>resetRect</emphasis> is true, the TextureRect property of the shape is automatically adjusted to the size of the new texture. If it is false, the texture rect is left unchanged.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>New texture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resetRect</parametername>
</parameternamelist>
<parameterdescription>
<para>Should the texture rect be reset to the size of the new texture? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a935e1ad30be89391e033c2bc7c52b13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setTextureRect</definition>
        <argsstring>(sfCircleShape *shape, sfIntRect rect)</argsstring>
        <name>sfCircleShape_setTextureRect</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>sfIntRect</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Set the sub-rectangle of the texture that a circle shape will display. </para>        </briefdescription>
        <detaileddescription>
<para>The texture rect is useful when you don&apos;t want to display the whole texture, but rather a part of it. By default, the texture rect covers the entire texture.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>Rectangle defining the region of the texture to display </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a3d83589f59067fb48edafb41555593b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setFillColor</definition>
        <argsstring>(sfCircleShape *shape, sfColor color)</argsstring>
        <name>sfCircleShape_setFillColor</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>sfColor</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set the fill color of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>This color is modulated (multiplied) with the shape&apos;s texture if any. It can be used to colorize the shape, or change its global opacity. You can use sfTransparent to make the inside of the shape transparent, and have the outline alone. By default, the shape&apos;s fill color is opaque white.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>New color of the shape </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1ac34e5e90366cd033a09ae0661a21f8f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setOutlineColor</definition>
        <argsstring>(sfCircleShape *shape, sfColor color)</argsstring>
        <name>sfCircleShape_setOutlineColor</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>sfColor</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set the outline color of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>You can use sfTransparent to disable the outline. By default, the shape&apos;s outline color is opaque white.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>New outline color of the shape </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1ada939d3b392fb3332e3fa6c1dc97e65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setOutlineThickness</definition>
        <argsstring>(sfCircleShape *shape, float thickness)</argsstring>
        <name>sfCircleShape_setOutlineThickness</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>float</type>
          <declname>thickness</declname>
        </param>
        <briefdescription>
<para>Set the thickness of a circle shape&apos;s outline. </para>        </briefdescription>
        <detaileddescription>
<para>This number cannot be negative. Using zero disables the outline. By default, the outline thickness is 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thickness</parametername>
</parameternamelist>
<parameterdescription>
<para>New outline thickness </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a29d5585268ca660c2c596598943e1ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API const sfTexture *</type>
        <definition>CSFML_GRAPHICS_API const sfTexture* sfCircleShape_getTexture</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getTexture</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the source texture of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>If the shape has no source texture, a NULL pointer is returned. The returned pointer is const, which means that you can&apos;t modify the texture when you retrieve it with this function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the shape&apos;s texture </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1ae4e63cf1c1c67ea5c5284a6bc6c410fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfIntRect</type>
        <definition>CSFML_GRAPHICS_API sfIntRect sfCircleShape_getTextureRect</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getTextureRect</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the sub-rectangle of the texture displayed by a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Texture rectangle of the shape </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1ade86c06c0516a0e0d0ec9fc5b619946f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfColor</type>
        <definition>CSFML_GRAPHICS_API sfColor sfCircleShape_getFillColor</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getFillColor</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the fill color of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Fill color of the shape </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a356978169b38b551754842f1554f58a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfColor</type>
        <definition>CSFML_GRAPHICS_API sfColor sfCircleShape_getOutlineColor</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getOutlineColor</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the outline color of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Outline color of the shape </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a4e4024985d93f2e280df53da4a9adf9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API float</type>
        <definition>CSFML_GRAPHICS_API float sfCircleShape_getOutlineThickness</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getOutlineThickness</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the outline thickness of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Outline thickness of the shape </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1af7062374d8ca361a5698b39e86d6148f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API size_t</type>
        <definition>CSFML_GRAPHICS_API size_t sfCircleShape_getPointCount</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getPointCount</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the total number of points of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of points of the shape </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a903689d03b319c2f0803a36a88a682b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfVector2f</type>
        <definition>CSFML_GRAPHICS_API sfVector2f sfCircleShape_getPoint</definition>
        <argsstring>(const sfCircleShape *shape, size_t index)</argsstring>
        <name>sfCircleShape_getPoint</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get a point of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>The result is undefined if <emphasis>index</emphasis> is out of the valid range.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the point to get, in range [0 .. getPointCount() - 1]</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Index-th point of the shape </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a78e837a61af66b4e821681ce4d316467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setRadius</definition>
        <argsstring>(sfCircleShape *shape, float radius)</argsstring>
        <name>sfCircleShape_setRadius</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Set the radius of a circle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>New radius of the circle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1afbd30a06cda6eeb01a89253a7cd2e5a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API float</type>
        <definition>CSFML_GRAPHICS_API float sfCircleShape_getRadius</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getRadius</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the radius of a circle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Radius of the circle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1af1f8ce561d55a02cfb27b7c85aa808f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API void</type>
        <definition>CSFML_GRAPHICS_API void sfCircleShape_setPointCount</definition>
        <argsstring>(sfCircleShape *shape, size_t count)</argsstring>
        <name>sfCircleShape_setPointCount</name>
        <param>
          <type>sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Set the number of points of a circle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>New number of points of the circle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1a00567f823392f628bd056a4d7ead1b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfFloatRect</type>
        <definition>CSFML_GRAPHICS_API sfFloatRect sfCircleShape_getLocalBounds</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getLocalBounds</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the local bounding rectangle of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>The returned rectangle is in local coordinates, which means that it ignores the transformations (translation, rotation, scale, ...) that are applied to the entity. In other words, this function returns the bounds of the entity in the entity&apos;s coordinate system.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Local bounding rectangle of the entity </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_circle_shape_8h_1aa004b351e90bb038310391a536f6c897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CSFML_GRAPHICS_API sfFloatRect</type>
        <definition>CSFML_GRAPHICS_API sfFloatRect sfCircleShape_getGlobalBounds</definition>
        <argsstring>(const sfCircleShape *shape)</argsstring>
        <name>sfCircleShape_getGlobalBounds</name>
        <param>
          <type>const sfCircleShape *</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Get the global bounding rectangle of a circle shape. </para>        </briefdescription>
        <detaileddescription>
<para>The returned rectangle is in global coordinates, which means that it takes in account the transformations (translation, rotation, scale, ...) that are applied to the entity. In other words, this function returns the bounds of the sprite in the global 2D world&apos;s coordinate system.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>Shape object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Global bounding rectangle of the entity </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Includes/personnal/CircleShape.h" line="429" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Includes/personnal/CircleShape.h"/>
  </compounddef>
</doxygen>
